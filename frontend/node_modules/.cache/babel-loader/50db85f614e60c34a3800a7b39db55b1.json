{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ika_l\\\\Desktop\\\\KONACNOPSW\\\\PSW\\\\frontend\\\\src\\\\main\\\\patient\\\\clinicFeedback.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nfunction ClinicFeedback() {\n  const token = localStorage.getItem(\"token\");\n  const email = localStorage.getItem(\"email\");\n  const [rating, setRating] = useState(null);\n  const [feedback, setFeedback] = useState(\"\");\n  const [anonymous, setAnonymous] = useState(false);\n\n  const onChangeRating = event => {\n    setRating(event.target.value);\n  };\n\n  const onFeedbackChange = event => {\n    setFeedback(event.target.value);\n  };\n\n  const onAnonymousChange = () => {\n    setAnonymous(!anonymous);\n  };\n\n  const onSendClick = event => {\n    event.preventDefault();\n    const url = \"http://localhost:56210/patients/addClinicFeedback\";\n    const data = {\n      text: feedback,\n      rating: rating,\n      anonymous: anonymous,\n      patientUsername: email\n    };\n    axios.post(url, data, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => console.log(res.data));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    onChange: onChangeRating,\n    placeholder: \"Clinic feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    placeholder: \"Clinic rate(1-10)\",\n    onChange: onFeedbackChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    onChangeonAnonymousChange: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, \"Anonymous rating\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: onSendClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, \"Send feedback\"));\n}\n\nexport default ClinicFeedback;","map":{"version":3,"sources":["C:/Users/ika_l/Desktop/KONACNOPSW/PSW/frontend/src/main/patient/clinicFeedback.jsx"],"names":["React","useEffect","useState","axios","ClinicFeedback","token","localStorage","getItem","email","rating","setRating","feedback","setFeedback","anonymous","setAnonymous","onChangeRating","event","target","value","onFeedbackChange","onAnonymousChange","onSendClick","preventDefault","url","data","text","patientUsername","post","headers","Authorization","then","res","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,cAAT,GAA0B;AACxB,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,QAAMC,KAAK,GAAGF,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AAEA,QAAM,CAACE,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAMa,cAAc,GAAIC,KAAD,IAAW;AAChCN,IAAAA,SAAS,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAT;AACD,GAFD;;AAIA,QAAMC,gBAAgB,GAAIH,KAAD,IAAW;AAClCJ,IAAAA,WAAW,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAX;AACD,GAFD;;AAIA,QAAME,iBAAiB,GAAG,MAAM;AAC9BN,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACD,GAFD;;AAIA,QAAMQ,WAAW,GAAIL,KAAD,IAAW;AAC7BA,IAAAA,KAAK,CAACM,cAAN;AACA,UAAMC,GAAG,GAAG,mDAAZ;AACA,UAAMC,IAAI,GAAG;AACXC,MAAAA,IAAI,EAAEd,QADK;AAEXF,MAAAA,MAAM,EAAEA,MAFG;AAGXI,MAAAA,SAAS,EAAEA,SAHA;AAIXa,MAAAA,eAAe,EAAElB;AAJN,KAAb;AAOAL,IAAAA,KAAK,CACFwB,IADH,CACQJ,GADR,EACaC,IADb,EACmB;AAAEI,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAG,UAASxB,KAAM;AAAjC;AAAX,KADnB,EAEGyB,IAFH,CAESC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACP,IAAhB,CAFjB;AAGD,GAbD;;AAeA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAU,IAAA,QAAQ,EAAET,cAApB;AAAoC,IAAA,WAAW,EAAC,iBAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAIE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,WAAW,EAAC,mBAFd;AAGE,IAAA,QAAQ,EAAEI,gBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,eAWE;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,yBAAyB,MAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,eAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAZF,eAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,eAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,eAeE;AAAQ,IAAA,OAAO,EAAEE,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAfF,CADF;AAmBD;;AAED,eAAejB,cAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction ClinicFeedback() {\r\n  const token = localStorage.getItem(\"token\");\r\n  const email = localStorage.getItem(\"email\");\r\n\r\n  const [rating, setRating] = useState(null);\r\n  const [feedback, setFeedback] = useState(\"\");\r\n  const [anonymous, setAnonymous] = useState(false);\r\n\r\n  const onChangeRating = (event) => {\r\n    setRating(event.target.value);\r\n  };\r\n\r\n  const onFeedbackChange = (event) => {\r\n    setFeedback(event.target.value);\r\n  };\r\n\r\n  const onAnonymousChange = () => {\r\n    setAnonymous(!anonymous);\r\n  };\r\n\r\n  const onSendClick = (event) => {\r\n    event.preventDefault();\r\n    const url = \"http://localhost:56210/patients/addClinicFeedback\";\r\n    const data = {\r\n      text: feedback,\r\n      rating: rating,\r\n      anonymous: anonymous,\r\n      patientUsername: email,\r\n    };\r\n\r\n    axios\r\n      .post(url, data, { headers: { Authorization: `Bearer ${token}` } })\r\n      .then((res) => console.log(res.data));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <textarea onChange={onChangeRating} placeholder=\"Clinic feedback\" />\r\n      <br />\r\n      <br />\r\n      <input\r\n        type=\"number\"\r\n        placeholder=\"Clinic rate(1-10)\"\r\n        onChange={onFeedbackChange}\r\n      />\r\n      <br />\r\n      <br />\r\n      <input type=\"checkbox\" onChangeonAnonymousChange />\r\n      <label>Anonymous rating</label>\r\n      <br />\r\n      <br />\r\n      <button onClick={onSendClick}>Send feedback</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ClinicFeedback;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ika_l\\\\Desktop\\\\KONACNOPSW\\\\PSW\\\\frontend\\\\src\\\\main\\\\admin\\\\seeToxicPatients.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Table from \"react-bootstrap/Table\";\n\nfunction SeeToxicPatients() {\n  const token = localStorage.getItem(\"token\");\n  const [loadedData, setLoadedData] = useState([]);\n  const [toxicPatients, setToxicPatients] = useState([]);\n  const [blockedPatients, setBlockedPatients] = useState([]);\n\n  const loadData = async () => {\n    const url = \"http://localhost:56210/patients/allToxic\";\n\n    try {\n      const data = await fetch(url, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const data1 = await data.json();\n      console.log(data1);\n      setLoadedData(data1.list);\n      let blocked = data1.list.filter(e => e.isBlocked == true);\n      let toxic = data1.list.filter(e => e.isBlockable == true);\n      setBlockedPatients(blocked);\n      setToxicPatients(toxic);\n      console.log(toxic);\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  };\n\n  const table = /*#__PURE__*/React.createElement(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, \"#\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, \"Patient name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, \"Patient surname\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, \"Patient phone number\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, \"Remove from toxic list\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, \"Block patient\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, \"Unblock patient\")), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, blockedPatients && blockedPatients.map(value => /*#__PURE__*/React.createElement(\"tr\", {\n    key: value.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    style: {\n      color: \"black\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  }, \"BLOCKED\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }\n  }, value.name), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }\n  }, value.surname), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }\n  }, value.phone), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }\n  }, \"X\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }, \"X\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, \"Unblock\")))), toxicPatients && toxicPatients.map(value => /*#__PURE__*/React.createElement(\"tr\", {\n    key: value.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    style: {\n      color: \"green\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }, \"TOXIC\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }, value.name), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }, value.surname), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }, value.phone), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, \"Remove\")), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, \"Block\")), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }, \"X\")))));\n  useEffect(() => {\n    loadData();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 10\n    }\n  }, table);\n}\n\nexport default SeeToxicPatients;","map":{"version":3,"sources":["C:/Users/ika_l/Desktop/KONACNOPSW/PSW/frontend/src/main/admin/seeToxicPatients.jsx"],"names":["React","useState","useEffect","axios","Table","SeeToxicPatients","token","localStorage","getItem","loadedData","setLoadedData","toxicPatients","setToxicPatients","blockedPatients","setBlockedPatients","loadData","url","data","fetch","headers","Authorization","data1","json","console","log","list","blocked","filter","e","isBlocked","toxic","isBlockable","error","table","map","value","id","color","name","surname","phone"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Table from \"react-bootstrap/Table\";\r\n\r\nfunction SeeToxicPatients() {\r\n  const token = localStorage.getItem(\"token\");\r\n  const [loadedData, setLoadedData] = useState([]);\r\n  const [toxicPatients, setToxicPatients] = useState([]);\r\n  const [blockedPatients, setBlockedPatients] = useState([]);\r\n\r\n  const loadData = async () => {\r\n    const url = \"http://localhost:56210/patients/allToxic\";\r\n    try {\r\n      const data = await fetch(url, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      const data1 = await data.json();\r\n      console.log(data1);\r\n      setLoadedData(data1.list);\r\n      let blocked = data1.list.filter((e) => e.isBlocked == true);\r\n      let toxic = data1.list.filter((e) => e.isBlockable == true);\r\n\r\n      setBlockedPatients(blocked);\r\n      setToxicPatients(toxic);\r\n\r\n      console.log(toxic);\r\n    } catch (error) {\r\n      console.log(\"error\", error);\r\n    }\r\n  };\r\n\r\n  const table = (\r\n    <Table>\r\n      <thead>\r\n        <th>#</th>\r\n        <th>Patient name</th>\r\n        <th>Patient surname</th>\r\n        <th>Patient phone number</th>\r\n        <th>Remove from toxic list</th>\r\n        <th>Block patient</th>\r\n        <th>Unblock patient</th>\r\n      </thead>\r\n      <tbody>\r\n        {blockedPatients &&\r\n          blockedPatients.map((value) => (\r\n            <tr key={value.id}>\r\n              <th style={{ color: \"black\" }}>BLOCKED</th>\r\n              <th>{value.name}</th>\r\n              <th>{value.surname}</th>\r\n              <th>{value.phone}</th>\r\n              <th>X</th>\r\n              <th>X</th>\r\n              <th>\r\n                <button>Unblock</button>\r\n              </th>\r\n            </tr>\r\n          ))}\r\n        {toxicPatients &&\r\n          toxicPatients.map((value) => (\r\n            <tr key={value.id}>\r\n              <th style={{ color: \"green\" }}>TOXIC</th>\r\n              <th>{value.name}</th>\r\n              <th>{value.surname}</th>\r\n              <th>{value.phone}</th>\r\n              <th>\r\n                <button>Remove</button>\r\n              </th>\r\n              <th>\r\n                <button>Block</button>\r\n              </th>\r\n              <th>X</th>\r\n            </tr>\r\n          ))}\r\n      </tbody>\r\n    </Table>\r\n  );\r\n\r\n  useEffect(() => {\r\n    loadData();\r\n  }, []);\r\n\r\n  return <div>{table}</div>;\r\n}\r\n\r\nexport default SeeToxicPatients;\r\n"]},"metadata":{},"sourceType":"module"}